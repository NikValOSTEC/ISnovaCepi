<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="ru">
  <compounddef id="mygraphicsscene_8cpp" kind="file" language="C++">
    <compoundname>mygraphicsscene.cpp</compoundname>
    <includes refid="mygraphicsscene_8h" local="yes">mygraphicsscene.h</includes>
    <incdepgraph>
      <node id="1">
        <label>mygraphicsscene.cpp</label>
        <link refid="mygraphicsscene_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>mygraphicsscene.h</label>
        <link refid="mygraphicsscene_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>view.h</label>
        <link refid="view_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>QGraphicsScene</label>
      </node>
      <node id="9">
        <label>QMenu</label>
      </node>
      <node id="4">
        <label>QPainter</label>
      </node>
      <node id="10">
        <label>qframe.h</label>
      </node>
      <node id="8">
        <label>qscrollbar.h</label>
      </node>
      <node id="6">
        <label>qshortcut.h</label>
      </node>
      <node id="7">
        <label>qundostack.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;mygraphicsscene.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"><ref refid="class_m_y_graphics_scene_1a42501ac071e63f39c349f95b1652cb19" kindref="member">MYGraphicsScene::MYGraphicsScene</ref>(QObject<sp/>*parent)</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>QGraphicsScene{parent}</highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MYGraphicsScene::drawBackground(QPainter*<sp/>painter,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QRectF&amp;<sp/>rect)</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>QColor<sp/>col<sp/>=<sp/>Qt::black;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>col.setAlpha(50);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;setPen(col);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gridSize<sp/>=<sp/>25;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>left<sp/>=<sp/>int(rect.left())<sp/>-<sp/>(int(rect.left())<sp/>%<sp/>gridSize);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>qreal<sp/>top<sp/>=<sp/>int(rect.top())<sp/>-<sp/>(int(rect.top())<sp/>%<sp/>gridSize);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>QVarLengthArray&lt;QLineF,<sp/>100&gt;<sp/>lines;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(qreal<sp/>x<sp/>=<sp/>left;<sp/>x<sp/>&lt;<sp/>rect.right();<sp/>x<sp/>+=<sp/>gridSize)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines.append(QLineF(x,<sp/>rect.top(),<sp/>x,<sp/>rect.bottom()));</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(qreal<sp/>y<sp/>=<sp/>top;<sp/>y<sp/>&lt;<sp/>rect.bottom();<sp/>y<sp/>+=<sp/>gridSize)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines.append(QLineF(rect.left(),<sp/>y,<sp/>rect.right(),<sp/>y));</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>painter-&gt;drawLines(lines.data(),<sp/>lines.size());</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="mygraphicsscene.cpp"/>
  </compounddef>
</doxygen>
